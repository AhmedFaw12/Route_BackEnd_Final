<?php

/*
-seeders and factories are two topics related to database

Seeder:
    -Laravel includes the ability to seed(ازرع) your database with (fake)data using seed classes.
    -All seed classes are stored in the database/seeders directory.
    -By default, a DatabaseSeeder class is defined for you. From this class, you may use the call method to run other seed classes, allowing you to control the seeding order.
    -----------------------------------------------------------------------------------------------------------
    -How to Generate seeder :
        -using command : php artisan make:seeder MyNameSeeder
        -All seeders generated by the framework will be placed in the database/seeders directory
    -----------------------------------------------------------------------------------------------------------
    
    -A seeder class only contains one method by default: run
    you may insert data into your database however you wish : using Eloquent model factories.

    How to Call Additional Seeders? :
        -Within the DatabaseSeeder class, you may use the call method to execute additional seeder classes
        -we will give array of seeders class names to call method:
            example:
                public function run()
                {
                    $this->call([
                        UserSeeder::class,
                        PostSeeder::class,
                        CommentSeeder::class,
                    ]);
                }
    ------------------------------------------------------------------------------------------------------------
    How to Run Seeders:
        -using command will run all seeders in : php artisan db:seed
        
        -the db:seed command runs the Database\Seeders\DatabaseSeeder class, which may in turn invoke other seed classes
        
        -if we run db:seed command again , it will create another additional records

        -You may also seed your database using the migrate:fresh command in combination with the --seed option, which will drop all tables and re-run all of your migrations. This command is useful for completely re-building your database:  
            -php artisan migrate:fresh --seed
    -----------------------------------------------------------------------------------------------------------
    -When to use Seeders:
        -in development 
        -in production : if table must have some primary records at first

    -example:
        -php artisan make:seeder DepartmentSeeder
        -DepartmentSeeder:
            public function run()
            {
                //we will make 5 fake department
                for($i = 1; $i <= 5 ; $i++){
                    $d = new Department();
                    $d->name = "Department $i";
                    $d->save();
                }
            }
        -DatabaseSeeder.php:
             public function run()
            {
                $this->call([
                    DepartmentSeeder::class,
                ]);
            }
        -php artisan db:seed
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Factory:
    -Laravel model factories and seeders make it painless to create test database records using your application's Eloquent models and relationships. 

    -All factory classes are stored in the database/factories directory

    -factories can create (bulk/many) database records using fake (names, ages, ......)
    ------------------------------------------------------------------------------------------------------------
    faker :
        -Faker is a PHP library/class that generates fake data for you.
        -has huge/many properties/methods  (name, numberbetween(min, max), street , firstname , ...............)
        
        -config/app:
            -'faker_locale' => 'en_US', :
            -this will create fake properties(name , ......) in english 
    ------------------------------------------------------------------------------------------------------------
    -How to Generate factory :
        -using command : php artisan make:factory MyNamefactory
        -All seeders generated by the framework will be placed in the database/factories directory
    ------------------------------------------------------------------------------------------------------------
    
    -A factory class only contains one method by default: definition() , we will generate fake record inside it:
            public function definition()
            {
                return [
                    "name" => $this->faker->name,
                    "department_id" => $this->faker->numberBetween(1,5),
                ];
            }

    - How to Call factories? :
        -we have model , factory 
        -model has a trait called hasFactory which means it has a factory its name will be ModelNameFactory
        -to call factory of my model : 
            -we will call factory inside DatabaseSeeder class outside call function 
            -Department::factory(Num of repeatitions)->create();
            -example :
                DatabaseSeeder:
                    public function run()
                    {
                        $this->call([
                            // DepartmentSeeder::class,
                        ]);
                        Department::factory(1000)->create();
                    }
    
    -How to Run factories:
        -php artisan db:seed

    Full Example of Factories:
        -php artisan make:seeder DepartmentSeeder
        -DepartmentFactory :
            public function definition()
            {
                return [
                    "name" => $this->faker->name,
                    "department_id" => $this->faker->numberBetween(1,5),
                ];
            }
        -DatabaseSeeder:
            public function run()
            {
                $this->call([
                    // DepartmentSeeder::class,
                ]);
                Department::factory(1000)->create();
            }    
        
        -php artisan db:seed
*/